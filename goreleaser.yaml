# GoReleaser configuration

archives:
  - 
    format: zip

builds:
  # - binary: hello
  #   id: hello
  #   main: ./cmd/main.go
  #   env:
  #     - CGO_ENABLED=0
  #   goos:
  #     - linux
  #     - windows
  #   goarch:
  #     - amd64
  #     - 386
  #     - arm64
  - binary: hello
    id: hello-macos
    main: ./cmd/main.go
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
    goarch:
      - amd64
      - arm64

universal_binaries:
-
  # ID of resulting universal binary.
  #
  # Defaults to the project name.
  id: hello-mac-universal

  # IDs to use to filter the built binaries.
  #
  # Defaults to the `id` field.
  # Since: v1.3.
  ids:
  - hello-macos

  # Whether to remove the previous single-arch binaries from the artifact list.
  # If left as false, your end release might have both several macOS archives:
  # amd64, arm64 and all.
  #
  # Defaults to false.
  replace: true
  hooks:
    post: gon -log-level=info -log-json ./gon.json

# signs:
#   - signature: "${artifact}.zip"
#     ids:
#     - hello-macos # here we filter the macos only build id
#     # you'll need to have gon on PATH
#     cmd: gon
#     # you can follow the gon docs to properly create the gon.hcl config file:
#     # https://github.com/mitchellh/gon
#     args:
#     - gon.json
#     artifacts: archive

